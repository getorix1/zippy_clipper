/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#+
#+     Internet Radio Automation & Encoding Toolkit
#+
#+     Copyright (C) 2018, 2019, 2020, 2021, 2022, 2023 , 2024
#+     by Kevin C. O'Kane
#+
#+     Kevin C. O'Kane
#+     kc.okane@gmail.com
#+     https://www.cs.uni.edu/~okane
#+     https://threadsafebooks.com/
#+
#+ This program is free software; you can redistribute it and/or modify
#+ it under the terms of the GNU General Public License as published by
#+ the Free Software Foundation; either version 2 of the License, or
#+ (at your option) any later version.
#+
#+ This program is distributed in the hope that it will be useful,
#+ but WITHOUT ANY WARRANTY; without even the implied warranty of
#+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#+ GNU General Public License for more details.
#+
#+ You should have received a copy of the GNU General Public License
#+ along with this program; if not, write to the Free Software
#+ Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#+
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

//	Feb 5, 2024

#include "includes.h"
#include "defines.h"
#include "common-externs.h"
#include "common-fcn-headers.h"

#include <vlc/libvlc.h>
#include <vlc/libvlc_renderer_discoverer.h>
#include <vlc/libvlc_media.h>
#include <vlc/libvlc_media_player.h>

#define SLASH '/'

void	get_tt(GtkTooltip *tooltip, int row) {

	char tmp[8192];
	char tmp1[8192];
	int i;

	if (strncmp(ProgramArray[row], "https:", 6) == 0 ||
		strncmp(ProgramArray[row], "http:", 5) == 0) {
		
		gtk_tooltip_set_text (tooltip, ProgramArray[row]);
		return;
		}
	

	sprintf(tmp, "du -h \"%s\"", ProgramArray[row]);

	FILE *f1 = popen(tmp, "r");

	if (f1 == NULL) { 
		return;
		}

	fgets(tmp, 8192, f1);
	fclose(f1);

	if (strlen(tmp) == 0) return;

	tmp[strlen(tmp) -1] = 0;

	for (i = 0; tmp[i] && !isspace(tmp[i]); i++);
	tmp[i] = 0;

	sprintf(tmp1, "Size: %s %s", tmp, ProgramArray[row]);

	gtk_tooltip_set_text (tooltip, tmp1);

	}


gboolean on_entry7_query_tooltip(GtkWidget *w,gint x, gint y, 
		gboolean km, GtkTooltip* tooltip) {

	if (e7Row < 0) {
		gtk_tooltip_set_text (tooltip, "No current entry in this row");
		return FALSE;
		}

	if (strlen(ProgramArray[e7Row]) == 0) 
		gtk_tooltip_set_text (tooltip, "No current entry in this row");

	else get_tt(tooltip, e7Row);

	return TRUE;
	}

gboolean on_entry8_query_tooltip(GtkWidget *w,gint x, gint y, 
		gboolean km, GtkTooltip* tooltip) {

	if (e8Row < 0) {
		gtk_tooltip_set_text (tooltip, "No current entry in this row");
		return FALSE;
		}

	if (strlen(ProgramArray[e8Row]) == 0) 
		gtk_tooltip_set_text (tooltip, "No current entry in this row");
		
	else get_tt(tooltip, e8Row);

	return TRUE;
	}

gboolean on_entry9_query_tooltip(GtkWidget *w,gint x, gint y, 
		gboolean km, GtkTooltip* tooltip) {

	if (e9Row < 0) {
		gtk_tooltip_set_text (tooltip, "No current entry in this row");
		return FALSE;
		}

	if (strlen(ProgramArray[e9Row]) == 0) 
		gtk_tooltip_set_text (tooltip, "No current entry in this row");

	else get_tt(tooltip, e9Row);

	return TRUE;
	}

gboolean on_entry10_query_tooltip(GtkWidget *w,gint x, gint y, 
		gboolean km, GtkTooltip* tooltip) {

	if (e10Row < 0) {
		gtk_tooltip_set_text (tooltip, "No current entry in this row");
		return FALSE;
		}

	if (strlen(ProgramArray[e10Row]) == 0) 
		gtk_tooltip_set_text (tooltip, "No current entry in this row");
	
	else get_tt(tooltip, e10Row);

	return TRUE;
	}

gboolean on_entry11_query_tooltip(GtkWidget *w,gint x, gint y, 
		gboolean km, GtkTooltip* tooltip) {

	if (e11Row < 0) {
		gtk_tooltip_set_text (tooltip, "No current entry in this row");
		return FALSE;
		}

	if (strlen(ProgramArray[e11Row]) == 0) 
		gtk_tooltip_set_text (tooltip, "No current entry in this row");
	
	else get_tt(tooltip, e11Row);

	return TRUE;
	}

gboolean on_entry12_query_tooltip(GtkWidget *w,gint x, gint y, 
		gboolean km, GtkTooltip* tooltip) {

	if (e12Row < 0) {
		gtk_tooltip_set_text (tooltip, "No current entry in this row");
		return FALSE;
		}

	if (strlen(ProgramArray[e12Row]) == 0) 
		gtk_tooltip_set_text (tooltip, "No current entry in this row");
	
	else get_tt(tooltip, e12Row);

	return TRUE;
	}

gboolean on_entry13_query_tooltip(GtkWidget *w,gint x, gint y, 
		gboolean km, GtkTooltip* tooltip) {

	if (e13Row < 0) {
		gtk_tooltip_set_text (tooltip, "No current entry in this row");
		return FALSE;
		}

	if (strlen(ProgramArray[e13Row]) == 0) 
		gtk_tooltip_set_text (tooltip, "No current entry in this row");
	
	else get_tt(tooltip, e13Row);

	return TRUE;
	}

gboolean on_entry14_query_tooltip(GtkWidget *w,gint x, gint y, 
		gboolean km, GtkTooltip* tooltip) {

	if (e14Row < 0) {
		gtk_tooltip_set_text (tooltip, "No current entry in this row");
		return FALSE;
		}

	if (strlen(ProgramArray[e14Row]) == 0) 
		gtk_tooltip_set_text (tooltip, "No current entry in this row");
	
	else get_tt(tooltip, e14Row);

	return TRUE;
	}

gboolean on_entry15_query_tooltip(GtkWidget *w,gint x, gint y, 
		gboolean km, GtkTooltip* tooltip) {

	if (e15Row < 0) {
		gtk_tooltip_set_text (tooltip, "No current entry in this row");
		return FALSE;
		}

	if (strlen(ProgramArray[e15Row]) == 0) 
		gtk_tooltip_set_text (tooltip, "No current entry in this row");
	
	else get_tt(tooltip, e15Row);

	return TRUE;
	}

gboolean on_entry2_query_tooltip(GtkWidget *w,gint x, gint y, 
		gboolean km, GtkTooltip* tooltip) {

	if (e2Row < 0) {
		gtk_tooltip_set_text (tooltip, "No current entry in this row");
		return FALSE;
		}

	if (strlen(ProgramArray[e2Row]) == 0) 
		gtk_tooltip_set_text (tooltip, "No current entry in this row");
	
	else get_tt(tooltip, e2Row);

	return TRUE;
	}

gboolean on_entry3_query_tooltip(GtkWidget *w,gint x, gint y, 
		gboolean km, GtkTooltip* tooltip) {

	if (e3Row < 0) {
		gtk_tooltip_set_text (tooltip, "No current entry in this row");
		return FALSE;
		}

	if (strlen(ProgramArray[e3Row]) == 0) 
		gtk_tooltip_set_text (tooltip, "No current entry in this row");
	
	else get_tt(tooltip, e3Row);

	return TRUE;
	}

gboolean on_entry4_query_tooltip(GtkWidget *w,gint x, gint y, 
		gboolean km, GtkTooltip* tooltip) {

	if (e4Row < 0) {
		gtk_tooltip_set_text (tooltip, "No current entry in this row");
		return FALSE;
		}

	if (strlen(ProgramArray[e4Row]) == 0) 
		gtk_tooltip_set_text (tooltip, "No current entry in this row");
	
	else get_tt(tooltip, e4Row);

	return TRUE;
	}

